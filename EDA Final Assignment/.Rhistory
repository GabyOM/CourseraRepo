sum(weekdays(brexit_polls$enddate, abbreviate = FALSE))
weekdays <- weekdays(brexit_polls$enddate, abbreviate = FALSE)
count(weekdays)
group_by(weekdays)
table(weekdays)
data(movielens)
movielens%>%head
as_datetime(movielens$timestamp)
timerevi <- as_datetime(movielens$timestamp)
table(timerevi, decrease=TRUE)
table(timerevi)
movielens %>%
mutate(timestamp1 = as.POSIXct(timestamp, origin = "1970-01-01", tz = "UTC"),
year = format(timestamp1, "%Y")) %>%
count(year) %>%
arrange(desc(n))
mutate(timestamp1 = as_datetime(timestamp),
year = year(timestamp1)) %>%
group_by(year) %>%
summarise(n = n()) %>%
arrange(desc(n))
mutate(timestamp1 = as_datetime(timestamp),
year = year(timestamp1)) %>%
group_by(year) %>%
summarise(n = n()) %>%
arrange(desc(n))
library(lubridate)
movielens %>%
mutate(timestamp1 = as_datetime(timestamp),
year = year(timestamp1)) %>%
group_by(year) %>%
summarise(n = n()) %>%
arrange(desc(n))
library(lubridate)
movielens %>%
mutate(timestamp1 = as_datetime(timestamp),
time = time(timestamp1)) %>%
group_by(time) %>%
summarise(n = n()) %>%
arrange(desc(n))
movielens %>%
mutate(timest = as_datetime(timestamp),
time = time_format("%H:%M:%S", tz="UTC")) %>%
group_by(time) %>%
summarise(n=n())%>%
arrange(desc(n))
movielens %>%
mutate(timest = time_format(timestamp),
time = time(timest)) %>%
group_by(time) %>%
summarise(n=n())%>%
arrange(desc(n))
movielens %>%
mutate(timest = as_datetime(timestamp),
time = time(timest)) %>%
group_by(time) %>%
summarise(n=n())%>%
arrange(desc(n))
movielens %>%
mutate(timest = as_datetime(timestamp),
time = time(timest)) %>%
group_by(time_format(format="%H:%M:%S", tz="UTC")) %>%
summarise(n=n())%>%
arrange(desc(n))
movielens %>%
mutate(timestamp1 = as.POSIXct(timestamp, origin = "1970-01-01", tz = "UTC"),
hour = format(timestamp1, "%H")) %>%
count(hour) %>%
arrange(desc(n))
library(tidyverse)
library(gutenbergr)
library(tidytext)
options(digits = 3)
install.packages("gutenbergr")
library(tidyverse)
library(gutenbergr)
library(tidytext)
options(digits = 3)
gutenberg_metadata
str_detect(gutenberg_metadata$title, patter="Pride and Prejudice", negate=FALSE)
sum(str_detect(gutenberg_metadata$title, patter="Pride and Prejudice", negate=FALSE))
sum(str_detect(gutenberg_metadata$title, patter="Pride and Prejudice"))
gutenberg_metadata %>%
filter(str_detect(title, "Pride and Prejudice"))  %>%
summarise(n = n_distinct(gutenberg_id))
gutenberg_works()
gutenberg_works("Pride and Prejudice")
gutenberg_works(=="Pride and Prejudice")
gutenberg_works()
gutenberg_works(title=="Prime and Prejudice")
gutenberg_works(gutenberg_works$title=="Prime and Prejudice")
gutenberg_works$title
gutenberg_metadata$title
gutenberg_works(title =="Pride and Prejudice")%>%
count(gutenberg_metadata$gutenberg_id)
gutenberg_metadata %>%
filter(str_detect(title, "Pride and Prejudice"))
gutenberg_metadata %>%
gutenberg_works(filter(str_detect(title, "Pride and Prejudice")%>%
count(gutenberg_id)))
gutenberg_works()
gutenberg_works(filter(str_detect(title, "Pride and Prejudice")
)
)
gutenberg_works%>% filter(str_detect(title, "Pride and Prejudice"))
str_detect(gutenberg_works$title, "Pride and Prejudice")
gutenberg_works(title="Pride and Prejudice")%>%
count(gutenberg_id, sort=TRUE)
gutenberg_works(title=="Pride and Prejudice")%>%
count(gutenberg_id, sort=TRUE)
library(tidytext)
words <- gutenberg_download(1342)
words
count(words)
words <- gutenberg_download(1342, strip = TRUE)
words
countwords <- words %>% unnest_tokens(word, text)
head(countwords)
data("stop_words")
word_count <- countwords %>%
anti_join(stop_words, by ="word")%>%
mutate(word=str_extract(word, "[a-z']+"))%>%
count(title, word, sort=TRUE)
familiar_texts <- gutenberg_download(c(5, 1342), meta_fields = "title")
tokenized_words <- familiar_texts %>%
unnest_tokens(word, text)
head(tokenized_words)
data(stop_words)
head(stop_words)
word_counts <- tokenized_words %>%
anti_join(stop_words, by = "word") %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(title, word, sort = TRUE)
head(word_counts)
word_proportions <- word_counts %>%
group_by(title) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(title, proportion) %>%
drop_na
library(ggplot2)
word_proportions %>%
top_n(20, `Pride and Prejudice`) %>%
mutate(word = reorder(word, `Pride and Prejudice`)) %>%
ggplot(aes(word, `Pride and Prejudice`)) +
geom_col() +
xlab(NULL) +
coord_flip()
words <- gutenberg_download(1342)
words
count(word(words))
sapply(strsplit(words, " "), length)
library(sapply))
library(tidyverse)
library(sapply))
sapply(strsplit(words, " "), length)
str_count(words)
str_count(words, pattern= "")
words <- gutenberg_download(1342)
words
View(words)
View(words)
sapply(strsplit(words, " "), length
)
sapply(strsplit(words, "\\s+"), length)
stri_count(words,regex="\\S+")
words <- gutenberg_download(1342)
words
library(dplyr)
library(stringr)
library(tidytext)
tidy_book <- words %>%
unnest_tokens(word, text)
tidy_book
View(tidy_book)
pride_prejudice <- gutenberg_download(1342)
View(pride_prejudice)
View(pride_prejudice)
unnest_tokens(pride_prejudice)
unnest_tokens(pride_prejudice)
unnest_tokens(pride_prejudice['text'])
unnest_tokens(pride_prejudice[text])
tidy_book <- pride_prejudice %>%
unnest_tokens(word, text)
tidy_book <- pride_prejudice['text'] %>%
unnest_tokens(word, text)
View(tidy_book)
View(tidy_book)
cleaned_book <- tidy_books %>%
anti_join(get_stopwords())
cleaned_book <- tidy_book %>%
anti_join(get_stopwords())
install.packages('stopwords')
cleaned_book <- tidy_book %>%
anti_join(get_stopwords())
View(cleaned_book)
View(cleaned_book)
length(cleaned_book)
rows(cleaned_book)
nrows(cleaned_book)
dim(cleaned_book)
dim(tidy_book)
lapply(strsplit(pride_prejudice, "\\s+"), function(x)
x[!(duplicated(x) | duplicated(x,fromLast=TRUE))])
View(pride_prejudice)
View(pride_prejudice)
View(cleaned_book)
View(cleaned_book)
View(tidy_book)
View(tidy_book)
book <- gutenberg_download(1342)
words <- book %>%
unnest_tokens(word, text)
nrow(words)
print("hello, world")
install.packages(c("shiny", "leaflet"))
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p(),
actionButton("recalc", "New points"),
p(),
textOutput("coordinates")
)
server <- function(input, output, session) {
points <- eventReactive(input$recalc, {
points = cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
output$coordinates <- renderText({
points
})
return(points)
}, ignoreNULL = FALSE)
observeEvent(input$Map_shape_click, { # update the location selectInput on map clicks
output$coordinates <- renderText({
"You have selected this"
})
})
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points())
})
}
shinyApp(ui, server)
install.packages("RMySQL", type = "source")
library("RMySQL", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
library("RMySQL")
install.packages("ggplot2movies")
setwd("~/GitHub/CourseraRepo/EDA Final Assignment")
library(ggplot2)
library(RColorBrewer)
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
str(NEI)
str(SCC)
NEI_totale <- aggregate(Emissions ~ year, NEI, sum)
barplot((NEI_totale$Emissions)/10^6, names.arg=NEI_totale$year,
xlab="Year",
ylab="PM2.5 Emissions (10^6 Tons)",
main="Total PM2.5 Emissions From All US Sources"
)
NEI_totale <- aggregate(Emissions ~ year, NEI, sum)
plot(NEI_totale$year, NEI_totale$Emissions, type = "o", col = "steelblue3",
main = expression("Total US "~ PM[2.5]~ "Emissions by Year"),
ylab = expression("Total US "~   PM[2.5] ~ "Emissions"),
xlab = "Year")
plot(NEI_totale$year, NEI_totale$Emissions, type = "o", col = "lightcoral",
main = expression("Total US "~ PM[2.5]~ "Emissions by Year"),
ylab = expression("Total US "~   PM[2.5] ~ "Emissions"),
xlab = "Year")
baltimorecity <- subset(NEI, NEI$fips == "24510")
baltimore_totale <- aggregate(Emissions ~ year, baltimorecity, sum)
plot(baltimore_totale$year, baltimore_totale$Emissions, type = "o",
main = expression("Total Baltimore" ~ PM[2.5] ~ "Emissions by Year"),
xlab = "Year", ylab = expression("Total Baltimore "~ PM[2.5] ~ "Emissions"),
col = "lightcoral")
baltimorecity <- subset(NEI, NEI$fips == "24510")
baltimore_type <- aggregate(Emissions ~ year + type, baltimorecity, sum)
ggplot(baltimore_type, aes(year, Emissions, col = type)) +
geom_line() +
geom_point() +
ggtitle(expression("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year")) +
ylab(expression("Total Baltimore " ~ PM[2.5] ~ "Emissions")) +
xlab("Year") +
scale_colour_discrete(name = "Type of sources") +
theme(legend.title = element_text(face = "bold"))
combustionRelated <- grepl("comb", SCC$SCC.Level.One, ignore.case=TRUE)
coalRelated <- grepl("coal", SCC$SCC.Level.Four, ignore.case=TRUE)
coalCombustion <- (combustionRelated & coalRelated)
combustionSCC <- SCC[coalCombustion,]$SCC
combustionNEI <- NEI[NEI$SCC %in% combustionSCC,]
library(ggplot2)
ggp <- ggplot(combustionNEI,aes(factor(year),Emissions/10^5)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
ggp
combustionRelated <- grepl("comb", SCC$SCC.Level.One, ignore.case=TRUE)
coalRelated <- grepl("coal", SCC$SCC.Level.Four, ignore.case=TRUE)
coalCombustion <- (combustionRelated & coalRelated)
combustionSCC <- SCC[coalCombustion,]$SCC
combustionNEI <- NEI[NEI$SCC %in% combustionSCC,]
library(ggplot2)
ggp <- ggplot(combustionNEI,aes(factor(year),Emissions/10^5)) +
geom_bar(stat="identity",fill="lightcoral",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
ggp
## 5. How have emissions from motor vehicle sources changed
## from 1999-2008 in Baltimore City?
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case=TRUE)
vehiclesSCC <- SCC[vehicles,]$SCC
vehiclesNEI <- NEI[NEI$SCC %in% vehiclesSCC,]
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
library(ggplot2)
ggp <- ggplot(baltimoreVehiclesNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="lightcoral",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
ggp
## 5. How have emissions from motor vehicle sources changed
## from 1999-2008 in Baltimore City?
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case=TRUE)
vehiclesSCC <- SCC[vehicles,]$SCC
vehiclesNEI <- NEI[NEI$SCC %in% vehiclesSCC,]
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
library(ggplot2)
ggpv <- ggplot(baltimoreVehiclesNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="lightcoral",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
ggpv
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case=TRUE)
vehiclesSCC <- SCC[vehicles,]$SCC
vehiclesNEI <- NEI[NEI$SCC %in% vehiclesSCC,]
# Subset the vehicles NEI data by each city's fip and add city name.
vehiclesBaltimoreNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
vehiclesBaltimoreNEI$city <- "Baltimore City"
vehiclesLANEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
vehiclesLANEI$city <- "Los Angeles County"
# Combine the two subsets with city name into one data frame
bothNEI <- rbind(vehiclesBaltimoreNEI,vehiclesLANEI)
library(ggplot2)
ggp <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(scales="free", space="free", .~city) +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
## 6. Compare emissions from motor vehicle sources in Baltimore City
## with emissions from motor vehicle sources in Los Angeles County,
## California (fips == “06037”). Which city has seen greater changes
## over time in motor vehicle emissions?
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case=TRUE)
vehiclesSCC <- SCC[vehicles,]$SCC
vehiclesNEI <- NEI[NEI$SCC %in% vehiclesSCC,]
# Subset the vehicles NEI data by each city's fip and add city name.
vehiclesBaltimoreNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
vehiclesBaltimoreNEI$city <- "Baltimore City"
vehiclesLANEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
vehiclesLANEI$city <- "Los Angeles County"
# Combine the two subsets with city name into one data frame
bothNEI <- rbind(vehiclesBaltimoreNEI,vehiclesLANEI)
library(ggplot2)
ggp3 <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(scales="free", space="free", .~city) +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
ggp3
## Load Libraries
library(ggplot2)
library(RColorBrewer)
## Load data
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
str(NEI)
str(SCC)
## 1. Have total emissions from PM2.5 decreased in the United States
## from 1999 to 2008? Using the base plotting system, make a plot
## showing the total PM2.5 emission from all sources for each of the
## years 1999, 2002, 2005, and 2008.
# Aggregate by sum the total emissions by year
NEI_totale <- aggregate(Emissions ~ year, NEI, sum)
plot(NEI_totale$year, NEI_totale$Emissions, type = "o", col = "lightcoral",
main = expression("Total US "~ PM[2.5]~ "Emissions by Year"),
ylab = expression("Total US "~   PM[2.5] ~ "Emissions"),
xlab = "Year")
dev.copy(png, filename="plot1.png",
width  = 480,
height = 480)
dev.off()
## Load Libraries
library(ggplot2)
library(RColorBrewer)
## Load data
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
str(NEI)
str(SCC)
## 2. Have total emissions from PM2.5 decreased in the Baltimore City,
## Maryland (fips == “24510”) from 1999 to 2008? Use the base plotting
## system to make a plot answering this question.
baltimorecity <- subset(NEI, NEI$fips == "24510")
baltimore_totale <- aggregate(Emissions ~ year, baltimorecity, sum)
plot(baltimore_totale$year, baltimore_totale$Emissions, type = "o",
main = expression("Total Baltimore" ~ PM[2.5] ~ "Emissions by Year"),
xlab = "Year", ylab = expression("Total Baltimore "~ PM[2.5] ~ "Emissions"),
col = "lightcoral")
dev.copy(png, filename="plot2.png",
width  = 480,
height = 480)
dev.off()
## Load Libraries
library(ggplot2)
library(RColorBrewer)
## Load data
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
str(NEI)
str(SCC)
## 3. Of the four types of sources indicated by the type
## (point, nonpoint, onroad, nonroad) variable, which of these four
## sources have seen decreases in emissions from 1999-2008 for
## Baltimore City? Which have seen increases in emissions from
## 1999-2008? Use the ggplot2 plotting system to make a plot answer
## this question.
baltimorecity <- subset(NEI, NEI$fips == "24510")
baltimore_type <- aggregate(Emissions ~ year + type, baltimorecity, sum)
ggplot(baltimore_type, aes(year, Emissions, col = type)) +
geom_line() +
geom_point() +
ggtitle(expression("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year")) +
ylab(expression("Total Baltimore " ~ PM[2.5] ~ "Emissions")) +
xlab("Year") +
scale_colour_discrete(name = "Type of sources") +
theme(legend.title = element_text(face = "bold"))
dev.copy(png, filename="plot3.png",
width  = 480,
height = 480)
dev.off()
## 4. Across the United States, how have emissions from coal
## combustion-related sources changed from 1999-2008?
combustionRelated <- grepl("comb", SCC$SCC.Level.One, ignore.case=TRUE)
coalRelated <- grepl("coal", SCC$SCC.Level.Four, ignore.case=TRUE)
coalCombustion <- (combustionRelated & coalRelated)
combustionSCC <- SCC[coalCombustion,]$SCC
combustionNEI <- NEI[NEI$SCC %in% combustionSCC,]
library(ggplot2)
ggp <- ggplot(combustionNEI,aes(factor(year),Emissions/10^5)) +
geom_bar(stat="identity",fill="lightcoral",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
ggp
dev.copy(png, filename="plot4.png",
width  = 480,
height = 480)
dev.off()
## 5. How have emissions from motor vehicle sources changed
## from 1999-2008 in Baltimore City?
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case=TRUE)
vehiclesSCC <- SCC[vehicles,]$SCC
vehiclesNEI <- NEI[NEI$SCC %in% vehiclesSCC,]
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
library(ggplot2)
ggpv <- ggplot(baltimoreVehiclesNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="lightcoral",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
ggpv
dev.copy(png, filename="plot5.png",
width  = 480,
height = 480)
dev.off()
## 6. Compare emissions from motor vehicle sources in Baltimore City
## with emissions from motor vehicle sources in Los Angeles County,
## California (fips == “06037”). Which city has seen greater changes
## over time in motor vehicle emissions?
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case=TRUE)
vehiclesSCC <- SCC[vehicles,]$SCC
vehiclesNEI <- NEI[NEI$SCC %in% vehiclesSCC,]
# Subset the vehicles NEI data by each city's fip and add city name.
vehiclesBaltimoreNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
vehiclesBaltimoreNEI$city <- "Baltimore City"
vehiclesLANEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
vehiclesLANEI$city <- "Los Angeles County"
# Combine the two subsets with city name into one data frame
bothNEI <- rbind(vehiclesBaltimoreNEI,vehiclesLANEI)
library(ggplot2)
ggp3 <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(scales="free", space="free", .~city) +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
ggp3
dev.copy(png, filename="plot6.png",
width  = 480,
height = 480)
dev.off()
